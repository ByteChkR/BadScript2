
import SourceReader from '<SourceReader>';

function GetNewOutputFile()
{
	const outFile = Context.Project.Build?.ActualOutputFile ?? Context.Project.Build.OutputFile;
	const dir = IO.Path.GetDirectoryName(outFile);
	const file = IO.Path.GetFileNameWithoutExtension(outFile);
	const ext = IO.Path.GetExtension(outFile);
	return IO.Path.Combine(dir, file + ".min" + ext);
}

function Minify()
{
	Console.WriteLine("Minify Build Output");
	let reader = new SourceReader(Context.Project.Build.SourceCode);

	let newSrc = Context.Project.Build.SourceCode;
	try
	{
		newSrc = reader.StripComments();
		Console.WriteLine("Strip Source Success");
	}
	catch(e)
	{
		Console.WriteLine("Strip Source Failed");
		Console.WriteLine(e);
	}

	newSrc = newSrc.Replace("\n", " ")
					.Replace("\r", " ")
					.Replace("\t", " ");

	let parts = newSrc.Split(" ", true);
	newSrc = "";
	foreach(part in parts)
	{
		newSrc += part + " ";
	}

	Context.Project.Build.SourceCode = newSrc.Trim();
	Context.Project.Build.ActualOutputFile = GetNewOutputFile();
}


Minify();