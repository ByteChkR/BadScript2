import Event from '<Event>'; export class Logger { const Event OnLog; const Event OnWarn; function Logger() { OnLog = new Event(function(msg) {}); OnWarn = new Event(function(msg) {}); } function Log(msg) { OnLog.Invoke(msg); } function Warn(msg) { OnWarn.Invoke(msg); } } export class TagLogger : Logger { let string LogTag = "[LOG]"; let string WarnTag = "[WARN]"; function TagLogger() { base(); } function Log(msg) { base.Log($"{LogTag} {msg}"); } function Warn(msg) { base.Warn($"{WarnTag} {msg}"); } } export function Logger CreateDefault() { let l = new Logger(); l.OnLog += Console.WriteLine; l.OnWarn += Console.WriteLine; return l; }