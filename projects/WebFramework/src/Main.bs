
function DefaultHandler(ctx)
{
	ctx.Response.SetStatusCode(404);
	ctx.Response.SetContent($"Route '{ctx.Request.Url.LocalPath}' not found!");
	ctx.Response.Close();
}


class WebApp
{
	const _listener;
	const _routes = [];
	let _exit = false;
	const _defaultRoute;
	function WebApp(prefix, defaultRoute?)
	{
		_defaultRoute = defaultRoute ?? DefaultHandler;
		_listener = NetHost.Create([prefix]);
	}

	function MapRoute(matchFunc, handler)
	{
		_routes.Add({Match: matchFunc, Handler: handler});
	}

	function MapExact(route, handler)
	{
		MapRoute(function(r) => r == route, handler);
	}

	function Exit()
	{
		_exit = true;
	}

	function GetRoute(ctx)
	{
		foreach(route in _routes)
		{
			if(route.Match(ctx.Request.Url.LocalPath))
			{
				return route.Handler;
			}
		}
		return _defaultRoute;
	}

	function Start()
	{
		_listener.Start();
		Concurrent.Run(function() {
			await Console.ReadLineAsync();
			_exit = true;
			_listener.Stop();
		}.AsTask());
		while(!_exit)
		{
			const ctx = await _listener.AcceptClient();
			if(ctx == null)
			{
				continue;
			}
			const route = GetRoute(ctx);
			route(ctx);
		}
	}
}

Runtime.Export("WebFramework", WebApp);
