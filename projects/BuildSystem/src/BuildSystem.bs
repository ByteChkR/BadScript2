
class BuildSystem
{

	function AddTargetSource(string dir!, context)
	{
		if(!IO.Directory.Exists(dir))
		{
			return;
		}
		const dirResolver = new BuildTargetDirectoryResolver(dir, context);
		Resolver.AddResolverFunc(dirResolver.Resolve);
	}

	const Targets = [];
	const Resolver = new BuildTargetResolver();


	function Run(string name!, context)
	{
		GetTarget(name).Run(this, context);
	}

	function any GetTarget(string name!)
	{
		let target = Targets.FirstOrDefault(function bool FindByName(t) {return t.GetName() == name;});
		if(target == null)
		{
			target = Resolver.Resolve(name);
			Targets.Add(target);
		}
		return target;
	}


}


export {
	BuildSystem: BuildSystem, 
	BuildLogger: BuildLogger,
	BuildTarget: BuildTarget,
	BuildTargetDirectoryResolver: BuildTargetDirectoryResolver,
	BuildTargetLoader: BuildTargetLoader,
	BuildTargetResolver: BuildTargetResolver
};