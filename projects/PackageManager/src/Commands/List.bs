function()
{

	function List(args)
	{
		if(args.Length == 0)
		{
			Console.WriteLine("Invalid Argument Count. Expected 'packages' or 'origins' as argument");
			return;
		}

		const type = args[0];
		if(type == "packages")
		{
			const packages = Config.Packages.GetPackages();
			foreach(package in packages.Keys)
			{
				const p = packages[package];
				foreach(tag in p.Tags.Keys)
				{
					const t = p.Tags[tag];
					Console.WriteLine($"{p.Type} {package}@{tag} installed from {t.Origin}");
				}
			}
		}
		else if(type == "origins")
		{
			const origins = Config.Origins.GetOrigins();
			foreach(origin in origins.Keys)
			{
				Console.WriteLine($"{origins[origin].Type} {origin}: {origins[origin].Url}");
			}
		}
		else
		{
			Console.WriteLine($"Invalid Argument. Expected 'packages' or 'origins' as argument but got '{type}'");
			return;
		}
	}

	Commands.Add("list", List, "Lists Installed Packages or Origins");
}();