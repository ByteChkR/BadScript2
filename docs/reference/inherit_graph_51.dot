digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="BadScript2.Parser.Operators.\lBadOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_bad_operator.html",tooltip="Base Class of All Operators."];
  Node0 -> Node1 [id="edge113_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="BadScript2.Parser.Operators.\lBadBinaryOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_bad_binary_operator.html",tooltip="Base class for all binary operators."];
  Node1 -> Node2 [id="edge114_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="BadScript2.Parser.Operators.\lBinary.BadAssignOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_assign_operator.html",tooltip="Implements the Assign Operator."];
  Node1 -> Node3 [id="edge115_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="BadScript2.Parser.Operators.\lBinary.BadInOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_in_operator.html",tooltip=" "];
  Node1 -> Node4 [id="edge116_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="BadScript2.Parser.Operators.\lBinary.BadMemberAccessOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_member_access_operator.html",tooltip="Implements the Member Access Operator."];
  Node1 -> Node5 [id="edge117_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="BadScript2.Parser.Operators.\lBinary.BadNullCheckedMemberAccess\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_null_checked_member_access_operator.html",tooltip="Implements the Null-Checked Member Access Operator."];
  Node1 -> Node6 [id="edge118_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="BadScript2.Parser.Operators.\lBinary.BadNullCoalescingAssignOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_null_coalescing_assign_operator.html",tooltip="Implements the Null-Coalescing Assign Operator."];
  Node1 -> Node7 [id="edge119_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="BadScript2.Parser.Operators.\lBinary.BadNullCoalescingOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_null_coalescing_operator.html",tooltip="Implements the Null-Coalescing Operator."];
  Node1 -> Node8 [id="edge120_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="BadScript2.Parser.Operators.\lBinary.BadRangeOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_range_operator.html",tooltip="Implements the Range Operator."];
  Node1 -> Node9 [id="edge121_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="BadScript2.Parser.Operators.\lBinary.BadTernaryOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_bad_ternary_operator.html",tooltip="Implements the Ternary Operator."];
  Node1 -> Node10 [id="edge122_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadEqualityOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_equality_operator.html",tooltip="Implements the Equality Operator."];
  Node1 -> Node11 [id="edge123_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadGreaterOrEqual\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_greater_or_equal_operator.html",tooltip="Implements the Greater or Equal Operator."];
  Node1 -> Node12 [id="edge124_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadGreaterThan\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_greater_than_operator.html",tooltip="Implements the Greater Than Operator."];
  Node1 -> Node13 [id="edge125_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadInequality\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_inequality_operator.html",tooltip="Implements the Inequality Operator."];
  Node1 -> Node14 [id="edge126_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadLessOrEqual\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_less_or_equal_operator.html",tooltip="Implements the Less or Equal Operator."];
  Node1 -> Node15 [id="edge127_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="BadScript2.Parser.Operators.\lBinary.Comparison.BadLessThanOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_comparison_1_1_bad_less_than_operator.html",tooltip="Implements the Less Than Operator."];
  Node1 -> Node16 [id="edge128_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="BadScript2.Parser.Operators.\lBinary.Logic.Assign.BadLogicAssign\lAndOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_assign_1_1_bad_logic_assign_and_operator.html",tooltip="Implements the Logic And Assign Operator."];
  Node1 -> Node17 [id="edge129_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="BadScript2.Parser.Operators.\lBinary.Logic.Assign.BadLogicAssign\lOrOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_assign_1_1_bad_logic_assign_or_operator.html",tooltip="Implements the Logic Or Assign Operator."];
  Node1 -> Node18 [id="edge130_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="BadScript2.Parser.Operators.\lBinary.Logic.Assign.BadLogicAssign\lXOrOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_assign_1_1_bad_logic_assign_x_or_operator.html",tooltip="Implements the Logic Exclusive Or Assign Operator."];
  Node1 -> Node19 [id="edge131_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="BadScript2.Parser.Operators.\lBinary.Logic.BadLogicAndOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_bad_logic_and_operator.html",tooltip="Implements the Logic And Operator."];
  Node1 -> Node20 [id="edge132_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="BadScript2.Parser.Operators.\lBinary.Logic.BadLogicOrOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_bad_logic_or_operator.html",tooltip="Implements the Logic Or Operator."];
  Node1 -> Node21 [id="edge133_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="BadScript2.Parser.Operators.\lBinary.Logic.BadLogicXOrOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_bad_logic_x_or_operator.html",tooltip="Implements the Logic Exclusive Or Operator."];
  Node1 -> Node22 [id="edge134_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="BadScript2.Parser.Operators.\lBinary.Math.Assign.BadAddAssign\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_assign_1_1_bad_add_assign_operator.html",tooltip="Implements the Add Assign Operator."];
  Node1 -> Node23 [id="edge135_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="BadScript2.Parser.Operators.\lBinary.Math.Assign.BadDivideAssign\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_assign_1_1_bad_divide_assign_operator.html",tooltip="Implements the Divide Assign Operator."];
  Node1 -> Node24 [id="edge136_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="BadScript2.Parser.Operators.\lBinary.Math.Assign.BadModulusAssign\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_assign_1_1_bad_modulus_assign_operator.html",tooltip="Implements the Modulus Assign Operator."];
  Node1 -> Node25 [id="edge137_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="BadScript2.Parser.Operators.\lBinary.Math.Assign.BadMultiplyAssign\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_assign_1_1_bad_multiply_assign_operator.html",tooltip="Implements the Multiply Assign Operator."];
  Node1 -> Node26 [id="edge138_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="BadScript2.Parser.Operators.\lBinary.Math.Assign.BadSubtractAssign\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_assign_1_1_bad_subtract_assign_operator.html",tooltip="Implements the Subtract Assign Operator."];
  Node1 -> Node27 [id="edge139_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="BadScript2.Parser.Operators.\lBinary.Math.Atomic.BadPostDecrement\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_atomic_1_1_bad_post_decrement_operator.html",tooltip="Implements the Post Decrement Operator."];
  Node1 -> Node28 [id="edge140_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="BadScript2.Parser.Operators.\lBinary.Math.Atomic.BadPostIncrement\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_atomic_1_1_bad_post_increment_operator.html",tooltip="Implements the Post Increment Operator."];
  Node1 -> Node29 [id="edge141_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="BadScript2.Parser.Operators.\lBinary.Math.BadAddOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_bad_add_operator.html",tooltip="Implements the Add Operator."];
  Node1 -> Node30 [id="edge142_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="BadScript2.Parser.Operators.\lBinary.Math.BadDivideOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_bad_divide_operator.html",tooltip="Implements the Divide Operator."];
  Node1 -> Node31 [id="edge143_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="BadScript2.Parser.Operators.\lBinary.Math.BadModulusOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_bad_modulus_operator.html",tooltip="Implements the Modulus Operator."];
  Node1 -> Node32 [id="edge144_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="BadScript2.Parser.Operators.\lBinary.Math.BadMultiplyOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_bad_multiply_operator.html",tooltip="Implements the Multiply Operator."];
  Node1 -> Node33 [id="edge145_Node000001_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="BadScript2.Parser.Operators.\lBinary.Math.BadSubtractOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_bad_subtract_operator.html",tooltip="Implements the Subtract Operator."];
  Node0 -> Node34 [id="edge146_Node000000_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="BadScript2.Parser.Operators.\lBadUnaryPrefixOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_bad_unary_prefix_operator.html",tooltip="Base class for all Unary Prefix Operators."];
  Node34 -> Node35 [id="edge147_Node000034_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="BadScript2.Parser.Operators.\lBinary.Logic.BadLogicNotOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_logic_1_1_bad_logic_not_operator.html",tooltip="Implements the Logic Not Operator."];
  Node34 -> Node36 [id="edge148_Node000034_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="BadScript2.Parser.Operators.\lBinary.Math.Atomic.BadPreDecrement\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_atomic_1_1_bad_pre_decrement_operator.html",tooltip="Implements the Pre Decrement Operator."];
  Node34 -> Node37 [id="edge149_Node000034_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="BadScript2.Parser.Operators.\lBinary.Math.Atomic.BadPreIncrement\lOperator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_bad_script2_1_1_parser_1_1_operators_1_1_binary_1_1_math_1_1_atomic_1_1_bad_pre_increment_operator.html",tooltip="Implements the Pre Increment Operator."];
}
